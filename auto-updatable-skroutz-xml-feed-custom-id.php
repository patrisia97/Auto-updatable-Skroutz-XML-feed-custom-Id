<?php

/**
* Plugin Name: Auto-Updatable Skroutz XML Feed Custom ID
* Description: Automatically updates a custom product ID for the XML feed generated by the Web Expert: WooCommerce Skroutz & BestPrice XML Feed plugin.
* Author: Patrisia Kalogianni
* Version: 1.0
**/



class WC_Auto_Updatable_Custom_ID {

    //  Bootstraps the class and hooks required actions & filters.
     
    public static function init() {
		
        add_action( 'woocommerce_product_options_general_product_data', __CLASS__ . '::woocommerce_product_data_custom_field' ); 
        add_action( 'woocommerce_process_product_meta', __CLASS__ . '::woocommerce_product_data_custom_field_save' );
		add_action( 'admin_notices', __CLASS__ . '::admin_update_success_notice');
    
	}
	
	
	/**
     * Displays custom product availability fields in product data / general.
     */
	 
	public static function woocommerce_product_data_custom_field(){
		
		global $woocommerce, $post;
		
        echo '<div class="product_custom_field">';
		
        // Checkbox Field for updating the custom ID.
		
        woocommerce_wp_checkbox(
            array(
			    'id' => '_update_custom_id_check',
				'label' => __('Ανανέωση Κωδικού Skroutz:') ,
                'description' => __('Ανανέωση του κωδικού (ID) του προϊόντος για το Skroutz.'),
                'desc_tip' => true
            )
        );
		
        echo '</div>';
				
	}
	
	
    /**
     * Checks whether to updated the custom product ID or not, and if yes then saves the updated value.
     */
	 
	public static function woocommerce_product_data_custom_field_save($post_id){
		
		// Gets the value of the Custom Product ID Checkbox.
		
        $update_id_option = isset( $_POST['_update_custom_id_check'] ) ? 'yes' : 'no';
			
    	// Gets the latest update of the custom ID.
			
		$custom_id = get_post_meta($post_id, '_custom_id', true);
			
		if ($update_id_option == 'yes'){
			
			// Updates the ID by adding a '-' and icrementing the number after the '-' by 1.
			
			$update_custom_id = $post_id . '-' . ( $custom_id ? intval( explode ('-', $custom_id)[1]) + 1 : '1' );
			update_post_meta($post_id, '_custom_id', esc_attr( $update_custom_id));
			
			// Saves the update status.
			
			$update_custom_id_status = 'yes';
			update_post_meta($post_id, '_custom_id_update_status', esc_attr( $update_custom_id_status));
			

		}
		
		// Handles the case when the custom ID checkbox has never been checked.  
		
		else {
			
			$update_custom_id_status = 'no';
			update_post_meta($post_id, '_custom_id_update_status', esc_attr( $update_custom_id_status));

		}
		
	}
	
	

    /**
	 * Shows alert message when the Custom ID of a product has been updated.
	 */
	
	public static function admin_update_success_notice() {
        
		global $pagenow, $post;

        if ($pagenow == 'post-new.php' || $pagenow == 'edit.php' || $pagenow == 'post.php') { 
            
			// The post is a product.
			
			if ('product' === get_post_type($_GET['post'])) {
				
				// The custom product id has been updated. 
				
				if ( get_post_meta($post -> ID, '_custom_id_update_status', true) == 'yes' ){
					
					// Shows success notice.
					
					echo '<div class="notice notice-success is-dismissible">
                              <p>Ο κωδικός για το Skroutz ανανεώθηκε επιτυχώς.</p>
                          </div>';
				
				    $update_custom_id_status = 'no';
				    update_post_meta( $post -> ID, '_custom_id_update_status', esc_attr( $update_custom_id_status));
				
				}
                
            }
        } 
    }

	
}

WC_Auto_Updatable_Custom_ID::init();